// manip 4 : promise based definition of geturl
// and async / await based usage of geturl
function geturl(strUrl: string): Promise<string> {
    return new Promise(
        function (resolve: (value: string) => any, reject: (reason?: any) => any) {
            const xhr = new XMLHttpRequest()
            xhr.onreadystatechange = function (evt: Event): any {
                if (this.readyState == 4) {
                    switch (this.status) {
                        case 200:
                            resolve(this.responseText)
                            break;
                        default:
                            reject(this.status)
                    }
                }
            }
            try {
                xhr.open("get", strUrl, true)
                xhr.setRequestHeader("Accept", "application/json; charset=UTF-8")
                xhr.send()
            } catch (err) {
                reject(1)
            }
        }
    )
}
// get books (then authors once books got)
async function chain() {
    try {
        const books = JSON.parse(await geturl("books.json"))
        console.log(books)
        const authors = JSON.parse(await geturl("authors.json"))
        console.log(authors)
    }
    catch (cause) {
        console.log("error : " + cause)
    }
}
chain()
