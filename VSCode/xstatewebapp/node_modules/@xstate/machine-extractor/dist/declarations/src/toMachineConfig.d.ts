import { Actions, MachineConfig, TransitionConfigOrTarget } from "xstate";
import { MaybeArrayOfActions } from "./actions";
import { TMachineCallExpression } from "./machineCallExpression";
import { MaybeTransitionArray } from "./transitions";
import { GetParserResult } from "./utils";
export interface ToMachineConfigParseOptions {
    /**
     * Whether or not to hash inline implementations, which
     * allow for parsing inline implementations as code.
     *
     * @default false
     */
    hashInlineImplementations?: boolean;
}
export declare const toMachineConfig: (result: TMachineCallExpression, opts?: ToMachineConfigParseOptions | undefined) => MachineConfig<any, any, any> | undefined;
export declare const getActionConfig: (astActions: GetParserResult<typeof MaybeArrayOfActions>, opts: ToMachineConfigParseOptions | undefined) => Actions<any, any>;
export declare const getTransitions: (astTransitions: GetParserResult<typeof MaybeTransitionArray>, opts: ToMachineConfigParseOptions | undefined) => TransitionConfigOrTarget<any, any>;
