import { types as t } from "@babel/core";
import { GetParserResult } from "./utils";
export declare type TransitionConfigNode = GetParserResult<typeof TransitionObject>;
declare const TransitionObject: import("./types").AnyParser<import("./utils").GetObjectKeysResult<{
    target: import("./types").AnyParser<{
        node: t.Node;
        value: string;
    }[]>;
    actions: import("./types").AnyParser<import("./actions").ActionNode[]>;
    cond: import("./types").AnyParser<import("./conds").CondNode>;
    description: import("./types").AnyParser<{
        node: t.Node;
        value: string;
    }>;
}>>;
export declare const MaybeTransitionArray: import("./types").AnyParser<import("./utils").GetObjectKeysResult<{
    target: import("./types").AnyParser<{
        node: t.Node;
        value: string;
    }[]>;
    actions: import("./types").AnyParser<import("./actions").ActionNode[]>;
    cond: import("./types").AnyParser<import("./conds").CondNode>;
    description: import("./types").AnyParser<{
        node: t.Node;
        value: string;
    }>;
}>[]>;
export {};
